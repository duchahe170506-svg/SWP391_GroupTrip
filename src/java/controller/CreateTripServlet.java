package controller;

import dal.TripDAO;
import model.Trips;

import java.io.IOException;
import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.*;

@WebServlet("/createtrip")
public class CreateTripServlet extends HttpServlet {

    private TripDAO dao;

    @Override
    public void init() {
        dao = new TripDAO();
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // Hi·ªÉn th·ªã form t·∫°o chuy·∫øn ƒëi
        request.getRequestDispatcher("/createtrip.jsp").forward(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            request.setCharacterEncoding("UTF-8"); // tr√°nh l·ªói ti·∫øng Vi·ªát

            // ====== 1. L·∫•y d·ªØ li·ªáu t·ª´ form ======
            String name = request.getParameter("name");
            String location = request.getParameter("location");
            Date start_date = parseDate(request.getParameter("start_date"));
            Date end_date = parseDate(request.getParameter("end_date"));
            BigDecimal budget = new BigDecimal(request.getParameter("budget"));
            String status = request.getParameter("status");
            Timestamp created_at = new Timestamp(System.currentTimeMillis());

            // ====== 2. T·∫°o TravelGroup m·ªõi (leader_id = 1 t·∫°m th·ªùi) ======
            int leaderId = 1; // ‚ö†Ô∏è t·∫°m th·ªùi fix c·ª©ng user_id = 1 (sau n√†y thay b·∫±ng user login)
            String groupName = name + " Group";
            String description = "Nh√≥m ƒë∆∞·ª£c t·∫°o t·ª± ƒë·ªông khi t·∫°o chuy·∫øn ƒëi: " + name;

            int group_id = dao.createGroupAndGetId(groupName, description, leaderId);

            if (group_id <= 0) {
                throw new Exception("Kh√¥ng th·ªÉ t·∫°o TravelGroup m·ªõi trong DB!");
            }

            // ====== 3. T·∫°o Trip m·ªõi ======
            Trips trip = new Trips(
                    0,              // trip_id t·ª± tƒÉng
                    group_id,       // group_id v·ª´a t·∫°o
                    name,
                    location,
                    start_date,
                    end_date,
                    budget,
                    status,
                    created_at
            );

            boolean success = dao.insertTrip(trip);

            // ====== 4. X·ª≠ l√Ω k·∫øt qu·∫£ ======
            HttpSession session = request.getSession();
            if (success) {
                session.setAttribute("successMessage", "‚úÖ T·∫°o chuy·∫øn ƒëi th√†nh c√¥ng!");
            } else {
                session.setAttribute("errorMessage", "‚ùå Kh√¥ng th·ªÉ t·∫°o chuy·∫øn ƒëi. Vui l√≤ng th·ª≠ l·∫°i!");
            }

            // Chuy·ªÉn h∆∞·ªõng v·ªÅ danh s√°ch chuy·∫øn ƒëi
            response.sendRedirect("trips");

        } catch (Exception e) {
            e.printStackTrace();
            // N·∫øu c√≥ l·ªói ‚Üí quay l·∫°i form k√®m th√¥ng b√°o
            request.setAttribute("errorMessage", "L·ªói khi t·∫°o chuy·∫øn ƒëi: " + e.getMessage());
            request.getRequestDispatcher("/createtrip.jsp").forward(request, response);
        }
    }

    // üëâ H√†m parse ng√†y h·ªó tr·ª£ c·∫£ yyyy-MM-dd v√† dd/MM/yyyy
    private Date parseDate(String dateStr) {
        if (dateStr == null || dateStr.isEmpty()) return null;
        try {
            return Date.valueOf(dateStr); // yyyy-MM-dd (chu·∫©n HTML input type=date)
        } catch (IllegalArgumentException e) {
            try {
                java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");
                sdf.setLenient(false);
                java.util.Date utilDate = sdf.parse(dateStr);
                return new Date(utilDate.getTime());
            } catch (Exception ex) {
                ex.printStackTrace();
                return null;
            }
        }
    }
}